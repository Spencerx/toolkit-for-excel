/*Copyright 2009 Mark Logic Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 * 
 * Program.cs - A simple app to start/quit PowerPoint 
 *              used for testing .xqy and .js APIs
*/
using System.ComponentModel;
using System.Data;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.IO;
using System;
using Office = Microsoft.Office.Core;
using Microsoft.Win32;
using PPT = Microsoft.Office.Interop.PowerPoint;
using System.Collections.Generic;
using System.Linq;
using System.Text;



namespace MarkLogic_PowerPointAddin_Test
{
    class Program
    {
      
        //loop thru dir, open and close each pptx.  
        //write out results. all should open/close without issue.
        //assumption they're generated by .xqy (add xcc, call here as first step? probably.)
        static void Main(string[] args)
        {

            try
            {

                string file = args[0];
             //   string MLAddin = "MarkLogic_PowerPointAddin";
                
                //start PowerPoint app
                PPT.Application pptApp;
                PPT.Presentation ppt;
                pptApp = new PPT.Application();
                pptApp.Visible = Microsoft.Office.Core.MsoTriState.msoTrue;
                ppt = pptApp.Presentations.Add(Microsoft.Office.Core.MsoTriState.msoTrue);
                ppt.Slides.Add(1, Microsoft.Office.Interop.PowerPoint.PpSlideLayout.ppLayoutBlank);
                ppt.SaveAs(file, Microsoft.Office.Interop.PowerPoint.PpSaveAsFileType.ppSaveAsOpenXMLPresentation, Microsoft.Office.Core.MsoTriState.msoFalse);

                ////enable addin
                //foreach (Office.COMAddIn addin in pptApp.COMAddIns)
                //{
                //    Console.WriteLine(addin.Description);
                //    if (addin.Description.ToUpper().Contains(MLAddin.ToUpper()))
                //    {
                //        addin.Connect = true;
                //    }

                //}
                
                // wait 10 sec
                System.Threading.Thread.Sleep(20000);
                
                // close ppt
                ppt.Close();
                pptApp.Quit();

            }
            catch (Exception e)
            {
                Console.WriteLine("ERROR: " + e.Message + e.StackTrace);
            }  
        }
    }
}
